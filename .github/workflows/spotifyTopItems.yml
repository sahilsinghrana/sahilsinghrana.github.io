name: Refresh Spotify Top Items

on:
  schedule:
    - cron: "25 17 * * 0-6"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-spotify-data:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install requests

      - name: Refresh Spotify Token
        id: refresh-token
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        run: |
          echo "import requests, os" > refresh_token.py
          echo "try:" >> refresh_token.py
          echo "    CLIENT_ID = os.environ['SPOTIFY_CLIENT_ID']" >> refresh_token.py
          echo "    CLIENT_SECRET = os.environ['SPOTIFY_CLIENT_SECRET']" >> refresh_token.py
          echo "    REFRESH_TOKEN = os.environ['SPOTIFY_REFRESH_TOKEN']" >> refresh_token.py
          echo "    auth_url = 'https://accounts.spotify.com/api/token'" >> refresh_token.py
          echo "    auth_data = {" >> refresh_token.py
          echo "        'grant_type': 'refresh_token'," >> refresh_token.py
          echo "        'refresh_token': REFRESH_TOKEN," >> refresh_token.py
          echo "        'client_id': CLIENT_ID," >> refresh_token.py
          echo "        'client_secret': CLIENT_SECRET" >> refresh_token.py
          echo "    }" >> refresh_token.py
          echo "    response = requests.post(auth_url, data=auth_data)" >> refresh_token.py
          echo "    response.raise_for_status()" >> refresh_token.py
          echo "    access_token = response.json()['access_token']" >> refresh_token.py
          echo "    print(f'::set-output name=access_token::{access_token}')" >> refresh_token.py
          echo "except Exception as e:" >> refresh_token.py
          echo "    print(f'Error refreshing Spotify token: {str(e)}')" >> refresh_token.py
          echo "    exit(1)" >> refresh_token.py
          python refresh_token.py

      - name: Fetch Top Artists and Songs
        id: fetch-data
        env:
          ACCESS_TOKEN: ${{ steps.refresh-token.outputs.access_token }}
        run: |
          echo "import requests, json, os" > fetch_data.py
          echo "try:" >> fetch_data.py
          echo "    access_token = os.environ['ACCESS_TOKEN']" >> fetch_data.py
          echo "    headers = {'Authorization': f'Bearer {access_token}', 'Content-Type': 'application/json'}" >> fetch_data.py
          echo "    top_artists_url = 'https://api.spotify.com/v1/me/top/artists'" >> fetch_data.py
          echo "    top_tracks_url = 'https://api.spotify.com/v1/me/top/tracks'" >> fetch_data.py
          echo "    artists_response = requests.get(top_artists_url, headers=headers)" >> fetch_data.py
          echo "    tracks_response = requests.get(top_tracks_url, headers=headers)" >> fetch_data.py
          echo "    artists_response.raise_for_status()" >> fetch_data.py
          echo "    tracks_response.raise_for_status()" >> fetch_data.py
          echo "    top_artists = artists_response.json()" >> fetch_data.py
          echo "    top_tracks = tracks_response.json()" >> fetch_data.py
          echo "    spotify_data = {'top_artists': top_artists, 'top_tracks': top_tracks}" >> fetch_data.py
          echo "    with open('public/spotifyData.json', 'w') as f:" >> fetch_data.py
          echo "        json.dump(spotify_data, f, indent=2)" >> fetch_data.py
          echo "except Exception as e:" >> fetch_data.py
          echo "    print(f'Error fetching Spotify data: {str(e)}')" >> fetch_data.py
          echo "    exit(1)" >> fetch_data.py
          python fetch_data.py

      - name: Commit and Push Spotify Data
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add public/spotifyData.json
          git commit -m 'Update Spotify Data'
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
